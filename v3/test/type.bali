[
    $constants: [
        $pi: ~Ï€
    ]
    $methods: [
        $example: [
            $procedure: none
            $instructions: ">
                NOTE --Skips to the next instruction.
                SKIP

                1.Jump:
                NOTE --Jumps to a new address (conditionally or unconditionally).
                JUMP TO 2.Push
                JUMP TO 3.Pull ON EMPTY
                JUMP TO 4.Load ON NONE
                JUMP TO 5.Save ON FALSE

                2.Push:
                NOTE --Pushes a value onto a stack.
                PUSH HANDLER 6.Drop
                PUSH LITERAL `>
                    {
                        let $foo := bar
                        let $bar := baz
                        let $baz := foo
                    }($bar: 5)
                <`
                PUSH CONSTANT $pi
                PUSH ARGUMENT $target

                3.Pull:
                NOTE --Pulls the top value from a stack.
                PULL HANDLER
                PULL COMPONENT
                PULL RESULT
                PULL EXCEPTION

                4.Load:
                NOTE --Loads a value from the environment onto a stack.
                LOAD VARIABLE $index
                LOAD DRAFT $citation
                LOAD CONTRACT $name
                LOAD MESSAGE $bag

                5.Save:
                NOTE --Saves the top value from a stack into the environment.
                SAVE VARIABLE $index
                SAVE DRAFT $citation
                SAVE CONTRACT $name
                SAVE MESSAGE $bag

                6.Drop:
                NOTE --Drops a value from the environment.
                DROP VARIABLE $index
                DROP DRAFT $citation
                DROP CONTRACT $name
                DROP MESSAGE $message

                7.Call:
                NOTE --Calls an intrinsic function with 0 to 3 arguments.
                CALL $now
                CALL $factorial WITH 1 ARGUMENTS
                CALL $sum WITH 2 ARGUMENTS
                CALL $range WITH 3 ARGUMENTS

                8.Send:
                NOTE --Sends a message to a target component with optional arguments.
                SEND $getAncestry TO COMPONENT
                SEND $setParameter TO COMPONENT WITH ARGUMENTS
                SEND $getKeys TO CONTRACT
                SEND $setAttribute TO CONTRACT WITH ARGUMENTS
            <"
            $bytecode: none
            $addresses: none
            $arguments: [$target]
            $variables: [
                $index
                $citation
                $name
                $bag
                $message
            ]
            $messages: [
                $getAncestry
                $setParameter
                $getKeys
                $setAttribute
            ]
        ]
    ]
    $literals: [
        {
            let $foo := bar
            let $bar := baz
            let $baz := foo
        }($bar: 5)
    ]
]
